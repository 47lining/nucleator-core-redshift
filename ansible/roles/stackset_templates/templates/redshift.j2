{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Create a nucleator Redshift cluster",
 
  "Parameters": {
    "CageName": {
      "Description": "Name of the Cage for use in instance tagging",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "DatabaseName": {
      "Description": "The name of the first database to be created when the redshift cluster is created",
      "Type": "String",
      "Default": "defaultdb",
      "AllowedPattern": "([a-z]|[0-9])+",
      "ConstraintDescription" : "must contain a-z or 0-9 only."
    },

    "ClusterType": {
      "Description": "The type of the cluster",
      "Type": "String",
      "Default": "single-node",
      "AllowedValues": [ "single-node", "multi-node" ],
      "ConstraintDescription" : "must be single-node or multi-node."
    },

    "NumberOfNodes": {
      "Description": "The number of compute nodes in the redshift cluster.  When cluster type is specified as: 1) single-node, the NumberOfNodes parameter should be specified as 1, 2) multi-node, the NumberOfNodes parameter should be greater than 1",
      "Type": "Number",
      "Default": "1"
    },

    "NodeType": {
      "Description": "The node type to be provisioned for the redshift cluster",
      "Type": "String",
      "Default": "dw1.xlarge",
      "AllowedValues" : [ "dw1.xlarge", "dw1.8xlarge", "dw2.large", "dw2.8xlarge" ]
,
      "ConstraintDescription" : "must be a valid RedShift node type."
    },

    "MasterUsername": {
      "Description": "The user name associated with the master user account for the redshift cluster that is being created",
      "Type": "String",
      "AllowedPattern": "([a-z])([a-z]|[0-9])*",
      "NoEcho": "true",
      "ConstraintDescription" : "must start with a-z and contain only a-z or 0-9."
    },

    "MasterUserPassword": {
      "Description": "The password associated with the master user account for the redshift cluster that is being created",
      "Type": "String",
      "NoEcho": "true",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "Encrypted": {
      "Description": "Whether to encrypt data at rest",
      "Type": "String",
      "Default": "false"
    },

    "Public": {
      "Description": "Whether to allow access from public networks",
      "Type": "String",
      "Default": "false"
    },

    "PortNumber" : {
      "Description" : "The port number on which the cluster accepts incoming connections",
      "Type" : "Number",
      "Default" : "5439"
    },

    "VpcId": {
        "Type": "String",
        "Description": "ID of the Cage's Virtual Private Cloud"
    },

    "NatSecurityGroupId": {
        "Type": "String",
        "Description": "SecurityGroupId for NAT to the public subnet"
    },

    "BastionSecurityGroupId": {
        "Type": "String",
        "Description": "SecurityGroupId for bastion hosts"
    },

    "PublicSubnet1Id": {
        "Type": "String",
        "Description": "Public Subnet 1 ID"
    },

    "PublicSubnet2Id": {
        "Type": "String",
        "Description": "Public Subnet 2 ID"
    },

    "PrivateSubnet1Id": {
        "Type": "String",
        "Description": "Private Subnet 1 ID"
    },

    "PrivateSubnet2Id": {
        "Type": "String",
        "Description": "Private Subnet 1 ID"
    },

    "DatabaseSubnet1Id": {
        "Type": "String",
        "Description": "Database Subnet 1 ID"
    },

    "DatabaseSubnet2Id": {
        "Type": "String",
        "Description": "Database Subnet 2 ID"
    }

  },

  "Conditions": {
    "IsMultiNodeCluster": { "Fn::Equals": [ { "Ref": "ClusterType" }, "multi-node" ] }
  },

  "Resources": {


    "RedshiftDBSubnetGroup" : {
      "Type" : "AWS::Redshift::ClusterSubnetGroup",
      "Properties" : {
        "Description" : "Redshift db subnet group",
        "SubnetIds" : [ { "Ref": "PublicSubnet1Id" },  { "Ref": "PublicSubnet2Id" } ]
      }
    },

    "RedshiftSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Redshift security group",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [ {
          "CidrIp" : "0.0.0.0/0",
          "FromPort" : { "Ref" : "PortNumber" },
          "ToPort" : { "Ref" : "PortNumber" },
          "IpProtocol" : "tcp"
        } ],
        "Tags": [
                    {
                        "Key": "Customer",
                        "Value": "{{customer_name}}"
                    },
                    {
                        "Key": "Cage",
                        "Value": "{{cage_name}}"
                    },
                    {
                        "Key": "Owner",
                        "Value": "{{owner}}"
                    },
                    {
                        "Key": "NucleatorGroup",
                        "Value": "NucleatorRedshift"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                ".",
                                [
                                    "security.redshift",
                                    {
                                        "Ref": "CageName"
                                    },
                                    "unresolvable"
                                ]
                            ]
                        }
                    }
        ]
      }
    },

    "RedshiftNatSecurityGroupDBIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
       "Properties": {
         "GroupId": { "Ref": "NatSecurityGroupId" },
         "IpProtocol": "tcp",
         "FromPort": { "Ref" : "PortNumber" },
         "ToPort": { "Ref" : "PortNumber" },
         "SourceSecurityGroupId": {
           "Ref": "RedshiftSecurityGroup"
        }
      }
    },

    "RedshiftBastionSecurityGroupDBIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
       "Properties": {
         "GroupId": { "Ref": "BastionSecurityGroupId" },
         "IpProtocol": "tcp",
         "FromPort": { "Ref" : "PortNumber" },
         "ToPort": { "Ref" : "PortNumber" },
         "SourceSecurityGroupId": {
           "Ref": "RedshiftSecurityGroup"
        }
      }
    },

    "RedshiftBastionSecurityGroupDBEgress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
       "Properties": {
         "GroupId": { "Ref": "BastionSecurityGroupId" },
         "IpProtocol": "tcp",
         "FromPort": { "Ref" : "PortNumber" },
         "ToPort": { "Ref" : "PortNumber" },
         "SourceSecurityGroupId": {
           "Ref": "RedshiftSecurityGroup"
        }
      }
    },

    "RedshiftDBEgress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
       "Properties": {
         "GroupId": { "Ref": "RedshiftSecurityGroup" },
         "IpProtocol": "tcp",
         "FromPort": { "Ref" : "PortNumber" },
         "ToPort": { "Ref" : "PortNumber" },
         "CidrIp": "0.0.0.0/0"
      }
    },

    "{{ cluster_name }}": {
      "Type": "AWS::Redshift::Cluster",
      "Properties": {
        "ClusterType": { "Ref": "ClusterType" },
        "NumberOfNodes": { "Fn::If": [ "IsMultiNodeCluster", { "Ref": "NumberOfNodes" }, { "Ref": "AWS::NoValue" } ] },
        "NodeType": { "Ref": "NodeType" },
        "DBName": { "Ref": "DatabaseName" },
        "Encrypted": { "Ref": "Encrypted" },
        "PubliclyAccessible": { "Ref": "Public" },
        "MasterUsername": { "Ref": "MasterUsername" },
        "MasterUserPassword": { "Ref": "MasterUserPassword" },
        "ClusterParameterGroupName": { "Ref": "RedshiftClusterParameterGroup" },
		"ClusterSubnetGroupName" : { "Ref": "RedshiftDBSubnetGroup"},
        "VpcSecurityGroupIds" : [ { "Ref" : "RedshiftSecurityGroup" } ]
      },
      "DeletionPolicy": "Snapshot"
    },

    "RedshiftClusterParameterGroup": {
      "Type": "AWS::Redshift::ClusterParameterGroup",
      "Properties": {
        "Description": "Cluster parameter group",
        "ParameterGroupFamily": "redshift-1.0",
        "Parameters": [ {
          "ParameterName": "enable_user_activity_logging",
          "ParameterValue": "true"
        } ]
      }
    }

  },
  "Outputs": {
    "ClusterEndpoint": {
      "Description" : "Endpoint for the newly created RedShift cluster",
      "Value": {
        "Fn::Join": [ ":", [ { "Fn::GetAtt": [ "{{ cluster_name }}", "Endpoint.Address" ] }, { "Fn::GetAtt": [ "{{ cluster_name }}", "Endpoint.Port" ] } ] ] }
    }
  }
}
